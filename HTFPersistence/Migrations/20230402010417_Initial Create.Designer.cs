// <auto-generated />
using System;
using HTFPersistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HTFPersistence.Migrations
{
    [DbContext(typeof(HTFContext))]
    [Migration("20230402010417_Initial Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HTFDomain.Models.ConsumptionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ConsumptionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Administrativo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Indirecto de proveedor"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Logístico"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Distribución"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Operación"
                        });
                });

            modelBuilder.Entity("HTFDomain.Models.ElectricEnergyConsumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConsumptionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmissionTypeId")
                        .HasColumnType("int");

                    b.Property<double>("KwQuantity")
                        .HasColumnType("double");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumptionTypeId");

                    b.HasIndex("EmissionTypeId");

                    b.ToTable("ElectricEnergyConsumptions");
                });

            modelBuilder.Entity("HTFDomain.Models.EmissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EmissionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Directa"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Indirecta"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Otra indirecta"
                        });
                });

            modelBuilder.Entity("HTFDomain.Models.FuelConsumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConsumptionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmissionTypeId")
                        .HasColumnType("int");

                    b.Property<double>("GallonQuantity")
                        .HasColumnType("double");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumptionTypeId");

                    b.HasIndex("EmissionTypeId");

                    b.ToTable("FuelConsumptions");
                });

            modelBuilder.Entity("HTFDomain.Models.PetrolDerivedConsumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConsumptionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmissionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Quantity")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ConsumptionTypeId");

                    b.HasIndex("EmissionTypeId");

                    b.ToTable("PetrolDerivedConsumptions");
                });

            modelBuilder.Entity("HTFDomain.Models.ElectricEnergyConsumption", b =>
                {
                    b.HasOne("HTFDomain.Models.ConsumptionType", "FuelType")
                        .WithMany()
                        .HasForeignKey("ConsumptionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTFDomain.Models.EmissionType", "EmissionType")
                        .WithMany()
                        .HasForeignKey("EmissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmissionType");

                    b.Navigation("FuelType");
                });

            modelBuilder.Entity("HTFDomain.Models.FuelConsumption", b =>
                {
                    b.HasOne("HTFDomain.Models.ConsumptionType", "FuelType")
                        .WithMany("FuelConsumptions")
                        .HasForeignKey("ConsumptionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTFDomain.Models.EmissionType", "EmissionType")
                        .WithMany("FuelConsumptions")
                        .HasForeignKey("EmissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmissionType");

                    b.Navigation("FuelType");
                });

            modelBuilder.Entity("HTFDomain.Models.PetrolDerivedConsumption", b =>
                {
                    b.HasOne("HTFDomain.Models.ConsumptionType", "FuelType")
                        .WithMany()
                        .HasForeignKey("ConsumptionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTFDomain.Models.EmissionType", "EmissionType")
                        .WithMany()
                        .HasForeignKey("EmissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmissionType");

                    b.Navigation("FuelType");
                });

            modelBuilder.Entity("HTFDomain.Models.ConsumptionType", b =>
                {
                    b.Navigation("FuelConsumptions");
                });

            modelBuilder.Entity("HTFDomain.Models.EmissionType", b =>
                {
                    b.Navigation("FuelConsumptions");
                });
#pragma warning restore 612, 618
        }
    }
}
